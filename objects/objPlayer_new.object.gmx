<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.5
in_air = false;
jumping = false;
max_jump = false;
gravity = 1;
spd = 7;
vaccel = 0;
walldir = 0;
jump_height = 24
grounded = false
crouching = false;
alive = true
death_timer = 2000000
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if(keyboard_check(ord("D")))
{
    hspeed = spd
}

else if (keyboard_check(ord("A")))
{
    hspeed = spd * -1;
}

if (keyboard_check(vk_space) &amp;&amp; !jumping)
{
    vspeed = -10;
    jumping = true;
}


if (vspeed &lt; 0)
{
    while place_meeting(x, y , all)
    {   
        vspeed = 0;
        move_outside_all(270,1);
    }  
} 


if (vspeed &gt; 0)
{
    while place_meeting(x, y, all)
    {   
        vspeed = 0;
        move_outside_all(90,1);
    }
}

//////////////////////////


if (hspeed &lt; 0)
{
    while place_meeting(x, y , all)
    {   
        //other.id;    
        hspeed = 0;
        move_outside_all(0,1);
    }  
} 


if (hspeed &gt; 0)
{
    while place_meeting(x, y, all)
    {   
        hspeed = 0;
        move_outside_all(180,1);
    }
}




if !place_meeting(x, y+1, all)
{
    gravity = 0.25;
}
else
{
    gravity = 0;
    
    if(!jumping)
    {
        vspeed = 0;
    }
    jumping = false;
 
}*/


if(alive)
{
    
    if (crouching)
    {
        sprite_index = sprCrouchingSprite
    }
    if (!crouching)
    {
        sprite_index = sprPlayer
    }
    if (place_meeting(x,y+1,platform) || place_meeting(x,y+1,Invinciblock))
    {
        grounded = true;
    }
    else
    {
        grounded = false;
    }
    if keyboard_check(ord("D"))
    {
        hspeed = spd
        walldir = 0
    }
    if keyboard_check(ord("A"))
    {
        hspeed = -spd
        walldir = 180
    }
    if keyboard_check(vk_right)
    {
        hspeed = spd
        walldir = 0
    }
    if keyboard_check(vk_left)
    {
        hspeed = -spd
        walldir = 180
    }
    if (hspeed == 0)
    {
        image_index = 4
    }
    if (abs(hspeed) &gt; 1)
    {
        image_xscale = sign(hspeed);
    }
    if ((keyboard_check_pressed(vk_space) || keyboard_check_pressed(ord("W"))) &amp;&amp; !jumping &amp;&amp; grounded)
    {
        in_air = true;
        jumping = true;
    }
    if ((keyboard_check_released(vk_space) || keyboard_check_released(ord("W"))))
    {
        in_air = false;
        max_jump = true;
        gravity = 1;
    }
    if (keyboard_check(ord("S")))
    {
        crouching = true;
    }
    if (in_air)
    {
        if ((vspeed &gt; -jump_height) &amp;&amp; !max_jump) 
        {
            vspeed -=2;
            gravity = 0;
        }
        if ((vspeed &lt;= -jump_height) &amp;&amp; !max_jump)
        {
            max_jump = true;
            gravity = 1;
        }
    }
}
else
{
    death_timer -= delta_time
    
    if(death_timer &lt; 0)
    {
        room_restart()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objGround">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (!place_free(x+hspeed,y))
{
    if (hspeed&lt;=0){move_contact_solid(180,abs(hspeed));}
    if (hspeed&gt;0){move_contact_solid(0,abs(hspeed));}
    hspeed=0;
}
  
if (!place_free(x,y+vspeed))
{
    if (vspeed&lt;=0){move_contact_solid(90,abs(vspeed));}
    if (vspeed&gt;0)
    {
        move_contact_solid(270,abs(vspeed));
        jumping = false;
        max_jump = false;
        
    }
    vspeed = 0;
    
}
 
if (!place_free(x+hspeed,y+vspeed))
{
    hspeed=0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
