<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTimeClone</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.counter = 0;
max_count = array_height_2d(global.time_array);
global.max_arrayLen = max_count;
count = 0;
time = 0;
clone_made = false;
key_held = false;
in_air = false;
jumping = false;
max_jump = false;
gravity = 1;
spd = 7;
vaccel = 0;
walldir = 0;
jump_height = 12
grounded = false

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.counter = count;
switch(global.time_array[count, 0])
{
    case 1:
    {
        if (global.time_array[count, 1] &gt; 0)
        {
            hspeed = -5;
            global.time_array[count, 1] -=1;
        }
        else
        {
            hspeed = 0;
        }
        break;
    }
    case 2:
    {
        if (global.time_array[count, 1] &gt; 0)
        {
            hspeed = 5;
            global.time_array[count, 1] -=1;
        }
        else
        {
            hspeed = 0;
        }
        break;
    }
    case 3:
    {
        if (vspeed &gt; -global.time_array[count, 1] &amp;&amp; !max_jump)
        {
            in_air = true;
            jumping = true;
        }
        else
        {
            in_air = false
            max_jump = true;
            gravity = 1;
            count++;
        }
        
        break;
    }
    case 4:
    {
        if (global.time_array[count, 1] &gt; 0)
        {
            hspeed = 0;
            global.time_array[count, 1] -=1;
        }
        break;
    }
}
if (in_air)
{
    if ((vspeed &gt; -jump_height) &amp;&amp; !max_jump) 
    {
        vspeed -=2;
        gravity = 0;
    }
    if ((vspeed &lt;= -jump_height) &amp;&amp; !max_jump)
    {
        max_jump = true;
        in_air = false;
        count++;
        gravity = 1;
    }
}  
if (global.time_array[count, 1] &lt;=0)
{
    if (count &lt; max_count-1)
    {
        count++;
        if(hspeed != 0)
        {
            hspeed = 0;
        }
    }
    in_air = false;
}

/*
if ((keyboard_check_pressed(vk_space) || keyboard_check_pressed(ord("W"))) &amp;&amp; !jumping &amp;&amp; grounded)
{
        in_air = true;
        jumping = true;
}
if ((keyboard_check_released(vk_space) || keyboard_check_released(ord("W"))))
{
    in_air = false;
    max_jump = true;
    gravity = 1;
}

    if (in_air)
    {
        if ((vspeed &gt; -jump_height) &amp;&amp; !max_jump) 
        {
            vspeed -=2;
            gravity = 0;
        }
        if ((vspeed &lt;= -jump_height) &amp;&amp; !max_jump)
        {
            max_jump = true;
            gravity = 1;
        }
    }

*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayerWall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!place_free(x+hspeed,y))
{
    if (hspeed&lt;=0){move_contact_solid(180,abs(hspeed));}
    if (hspeed&gt;0){move_contact_solid(0,abs(hspeed));}
    hspeed=0;
}
  
if (!place_free(x,y+vspeed))
{
    if (vspeed&lt;=0){move_contact_solid(90,abs(vspeed));}
    if (vspeed&gt;0)
    {
        move_contact_solid(270,abs(vspeed));
        jumping = false;
        max_jump = false;
        
    }
    vspeed = 0;
    
}
 
if (!place_free(x+hspeed,y+vspeed))
{
    hspeed=0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objGround">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!place_free(x+hspeed,y))
{
    if (hspeed&lt;=0){move_contact_solid(180,abs(hspeed));}
    if (hspeed&gt;0){move_contact_solid(0,abs(hspeed));}
    hspeed=0;
}
  
if (!place_free(x,y+vspeed))
{
    if (vspeed&lt;=0){move_contact_solid(90,abs(vspeed));}
    if (vspeed&gt;0)
    {
        move_contact_solid(270,abs(vspeed));
        jumping = false;
        max_jump = false;
        
    }
    vspeed = 0;
    
}
 
if (!place_free(x+hspeed,y+vspeed))
{
    hspeed=0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
